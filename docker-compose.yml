
# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '2.1'
networks:
  backend:
   name: app
   driver: bridge
volumes:
  postgres-data:
# Define services
services:
  # App backend service
  app:
    image: dataserviceapp.jar:latest
    # Give the container the name web-app. You can changes to something else.
    container_name: web-app
    # Forward the exposed port 8080 on the container to port 8080 on the host machine
    ports:
      - "8080:8080"
    networks:
      - backend
    build:
     context: ./
     dockerfile: Dockerfile
    # This service depends on postgres. Start that first.
    depends_on:
      - postgres-db
  # Database Service (Postgres)
  postgres-db:
    # Use the Docker Image postgres. 
    image: postgres:latest
    # Give the container the name postgres-db. You can changes to something else.
    container_name: postgres-db
    restart: always
    # Set a volume some that database is not lost after shutting down the container.
    # I used the name postgres-data but you can changed it to something else.
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    # Maps port 5432 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
    ports:
      - "5432:5432"
    # Setup the username, password, and database name. You can changes these values.
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    # Service health check
    healthcheck:
      test: pg_isready -U postgres
      interval: 1m
      timeout: 10s
      retries: 2